<?php

namespace HollyIT\StaticLibraries\Test;

use HollyIT\StaticLibraries\LibrariesManager;
use HollyIT\StaticLibraries\Library;
use HollyIT\StaticLibraries\StaticLibrariesServiceProvider;
use Illuminate\Support\Facades\File;

class TestCase extends \Orchestra\Testbench\TestCase
{
    public function libraries(): LibrariesManager
    {
        return app(LibrariesManager::class);
    }

    protected function getPackageProviders($app): array
    {
        return [
            StaticLibrariesServiceProvider::class,
        ];
    }

    public function assertLibraryOrder(array $libraries, LibrariesManager $manager = null)
    {
        $manager = $manager ?? $this->libraries();
        $this->assertEquals($libraries, collect($manager->getOrdered())->map(fn (Library $library) => $library->getName())->values()->toArray());
    }

    protected function tearDown(): void
    {
        File::deleteDirectory(__DIR__.'/temp');
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function withPublicPath()
    {
        File::ensureDirectoryExists(__DIR__.'/temp/public');
        $this->app->bind('path.public', function () {
            return __DIR__.'/temp/public';
        });
    }
}
